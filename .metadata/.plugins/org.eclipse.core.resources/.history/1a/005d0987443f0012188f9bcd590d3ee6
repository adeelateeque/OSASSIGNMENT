package View;

import javax.swing.JFrame;
import javax.swing.JPanel;

import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Color;
import java.awt.Font;
import java.awt.Point;
import javax.swing.JSplitPane;
import java.awt.GridBagLayout;
import javax.swing.JWindow;
import java.awt.ComponentOrientation;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import javax.swing.JToolBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JButton;
import javax.swing.BorderFactory;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import javax.swing.border.SoftBevelBorder;
import javax.swing.border.TitledBorder;
import javax.swing.ImageIcon;
import javax.swing.JTextArea;
import java.awt.GridBagConstraints;
import javax.swing.JTextField;
import javax.swing.BoxLayout;
import javax.swing.JRadioButton;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.title.TextTitle;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.HorizontalAlignment;
import org.jfree.ui.RectangleEdge;
import org.jfree.ui.RefineryUtilities;

import Demo.LineChartDemo1;
import java.awt.Rectangle;

public class DiskOptimizationApp {
	
	private JWindow jWindow = null;  //  @jve:decl-index=0:visual-constraint="123,146"
	private JPanel jContentPane = null;
	private JToolBar jJToolBarBar = null;
	private JButton jButton_close = null;  //  @jve:decl-index=0:visual-constraint="740,79"
	private JButton jButton_Resize = null;
	private JButton jButton_Hide = null;
	private JSplitPane jSplitPane_left_right = null;
	private JPanel jPanel_ContentHolder = null;
	private JPanel jPanel_WorkingHolder = null;
	private JTextArea jTextArea = null;
	private JTextField jTextField = null;
	private JSplitPane jSplitPane_Content = null;
	private JPanel jPanel_leftContent = null;
	private JPanel jPanel_rightContent = null;
	private JButton jButton_Upload = null;
	private JRadioButton jRadioButton_FCFS = null;
	private JRadioButton jRadioButton_SSTF = null;
	private JRadioButton jRadioButton_SCAN = null;
	private JRadioButton jRadioButton_CSCAN = null;
	private JRadioButton jRadioButton_LOOK = null;
	private JRadioButton jRadioButton_CLOOK = null;
	private JSplitPane jSplitPane_right = null;
	private JPanel jPanel_information = null;
	JWindow getJWindow() {
		if (jWindow == null) {
			jWindow = new JWindow(new JFrame());
			jWindow.setFocusable(true);
			jWindow.setSize(new Dimension(900, 600));
			jWindow.setContentPane(getJContentPane());
		}
		return jWindow;
	}
	private JPanel getJContentPane() {
		if (jContentPane == null) {
			jContentPane = new JPanel();
			jContentPane.setLayout(new BorderLayout());
			jContentPane.setForeground(Color.WHITE);
			jContentPane.setBorder(BorderFactory.createMatteBorder(0,0, 0,0,new ImageIcon("C:/Users/MoistyBurger/Desktop/images.jpg")) );
			jContentPane.setBackground(Color.white);
			jContentPane.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
			jContentPane.add(getJJToolBarBar(), BorderLayout.NORTH);
			jContentPane.add(getJSplitPane_left_right(), BorderLayout.CENTER);
		}
		return jContentPane;
	}
	private JToolBar getJJToolBarBar() {
		if (jJToolBarBar == null) {
			jJToolBarBar = new JToolBar();
			jJToolBarBar.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
			jJToolBarBar.setFloatable(false);
			jJToolBarBar.setOpaque(false);
			jJToolBarBar.setBackground(Color.GRAY);
			jJToolBarBar.setForeground(Color.GRAY);
			jJToolBarBar.add(getJButton_close());
			jJToolBarBar.add(getJButton_Resize());
			jJToolBarBar.add(getJButton_Hide());
			jJToolBarBar.addMouseMotionListener(new MouseMotionListener() {
			    private int mx, my;

			    public void mouseMoved(MouseEvent e) {
			        mx = e.getXOnScreen();
			        my = e.getYOnScreen();
			    }

			    @Override
			    public void mouseDragged(MouseEvent e) {
			    	
			        Point p = getJWindow().getLocation();
			        p.x += e.getXOnScreen() - mx;
			        p.y += e.getYOnScreen() - my;
			        mx = e.getXOnScreen();
			        my = e.getYOnScreen();
			        getJWindow().setLocation(p);
			    }
			});
		}
		return jJToolBarBar;
	}
	private JButton getJButton_close() {
		if (jButton_close == null) {
			jButton_close = new JButton();
			jButton_close.setSize(25, 25);
			jButton_close.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					getJWindow().setVisible(false);
					getJWindow().removeAll();
				}
			});
			jButton_close.setOpaque(false); 
			jButton_close.setFocusPainted(false);
			jButton_close.setText(" X ");
		}
		return jButton_close;
	}
	private JButton getJButton_Resize() {
		if (jButton_Resize == null) {
			jButton_Resize = new JButton();
			jButton_Resize.setOpaque(false);
			jButton_Resize.setRequestFocusEnabled(false);
			jButton_Resize.setFocusPainted(false);
			jButton_Resize.setText(" |_| ");
		}
		return jButton_Resize;
	}
	private JButton getJButton_Hide() {
		if (jButton_Hide == null) {
			jButton_Hide = new JButton();
			jButton_Hide.setOpaque(false);
			jButton_Hide.setRequestFocusEnabled(false);
			jButton_Hide.setFocusPainted(false);
			jButton_Hide.setText(" _ ");
		}
		return jButton_Hide;
	}
	/**
	 * This method initializes jSplitPane_left_right	
	 * 	
	 * @return javax.swing.JSplitPane	
	 */
	private JSplitPane getJSplitPane_left_right() {
		if (jSplitPane_left_right == null) {
			jSplitPane_left_right = new JSplitPane();
			jSplitPane_left_right.setDividerSize(15);
			jSplitPane_left_right.setBackground(Color.BLACK);
			jSplitPane_left_right.setOrientation(JSplitPane.VERTICAL_SPLIT);
			jSplitPane_left_right.setDividerLocation(350);
			jSplitPane_left_right.setBottomComponent(getJPanel_WorkingHolder());
			jSplitPane_left_right.setTopComponent(getJPanel_ContentHolder());
		}
		return jSplitPane_left_right;
	}
	/**
	 * This method initializes jPanel_ContentHolder	
	 * 	
	 * @return javax.swing.JPanel	
	 */
	private JPanel getJPanel_ContentHolder() {
		if (jPanel_ContentHolder == null) {
			jPanel_ContentHolder = new JPanel();
			jPanel_ContentHolder.setLayout(new BorderLayout());
			jPanel_ContentHolder.add(getJSplitPane_Content(), BorderLayout.CENTER);
		}
		return jPanel_ContentHolder;
	}
	/**
	 * This method initializes jPanel_WorkingHolder	
	 * 	
	 * @return javax.swing.JPanel	
	 */
	private JPanel getJPanel_WorkingHolder() {
		if (jPanel_WorkingHolder == null) {
			jPanel_WorkingHolder = new JPanel();
			jPanel_WorkingHolder.setLayout(new BorderLayout());
			jPanel_WorkingHolder.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
			jPanel_WorkingHolder.add(getJTextArea(), BorderLayout.CENTER);
		}
		return jPanel_WorkingHolder;
	}
	private JTextArea getJTextArea() {
		if (jTextArea == null) {
			jTextArea = new JTextArea();
			jTextArea.setText("dsa");
			jTextArea.setEditable(true);
			jTextArea.setEnabled(true);
			jTextArea.setLineWrap(true);
			jTextArea.setFocusable(true);
			jTextArea.setWrapStyleWord(true);
		}
		return jTextArea;
	}
	/**
	 * This method initializes jSplitPane_Content	
	 * 	
	 * @return javax.swing.JSplitPane	
	 */
	private JSplitPane getJSplitPane_Content() {
		if (jSplitPane_Content == null) {
			jSplitPane_Content = new JSplitPane();
			jSplitPane_Content.setDividerLocation(750);
			jSplitPane_Content.setRightComponent(getJSplitPane_right());
			jSplitPane_Content.setLeftComponent(getJPanel_leftContent());
		}
		return jSplitPane_Content;
	}
	/**
	 * This method initializes jPanel_leftContent	
	 * 	
	 * @return javax.swing.JPanel	
	 */
	private JPanel getJPanel_leftContent() {
		if (jPanel_leftContent == null) {
			jPanel_leftContent = createDemoPanel();
			 LineChartDemo1 linechartdemo1 = new LineChartDemo1("OS Algorithm");
		        
			jPanel_leftContent.setLayout(null);
			
		}
		return jPanel_leftContent;
	}
	  private static CategoryDataset createDataset()
	    {
	        DefaultCategoryDataset defaultcategorydataset = new DefaultCategoryDataset();
	        defaultcategorydataset.addValue(86, "Classes", "");
	        defaultcategorydataset.addValue(1470, "Classes", "JDK 1.1");
	        defaultcategorydataset.addValue(913, "Classes", "JDK 1.2");
	        defaultcategorydataset.addValue(1774, "Classes", "JDK 1.3");
	        defaultcategorydataset.addValue(948, "Classes", "JDK 1.4");
	        defaultcategorydataset.addValue(1509, "Classes", "JDK 1.5");
	        
//	        for(int i=0;i<5;i++)
//	        {
//	        	String test=""+i;
//	        	defaultcategorydataset.addValue(2+i, "Classes",test );
//	        }
	        return defaultcategorydataset;
	    }

	    private static JFreeChart createChart(CategoryDataset categorydataset)
	    {
	        JFreeChart jfreechart = ChartFactory.createLineChart("C-SCAN/FCFS", null, "Track", categorydataset, PlotOrientation.HORIZONTAL, false, true, false);
	        jfreechart.addSubtitle(new TextTitle("By The Fantastic 4"));
	        
	        TextTitle texttitle = new TextTitle("Authors: A Ameenudeen,Adeel Ateeque,Lee Kai Quan,Shahrikin Alias");
	        texttitle.setFont(new Font("SansSerif", 0, 10));
	        texttitle.setPosition(RectangleEdge.BOTTOM);
	        texttitle.setHorizontalAlignment(HorizontalAlignment.RIGHT);
	        jfreechart.addSubtitle(texttitle);
	        
	        jfreechart.setBackgroundPaint(Color.white);
	        CategoryPlot categoryplot = (CategoryPlot)jfreechart.getPlot();
	        categoryplot.setBackgroundPaint(Color.lightGray);
	        categoryplot.setRangeGridlinesVisible(false);
	        java.net.URL url = (Demo.LineChartDemo1.class).getClassLoader().getResource("OnBridge11small.png");
	        if(url != null)
	        {
	            ImageIcon imageicon = new ImageIcon(url);
	            jfreechart.setBackgroundImage(imageicon.getImage());
	            categoryplot.setBackgroundPaint(new Color(0, 0, 0, 0));
	        }
	        NumberAxis numberaxis = (NumberAxis)categoryplot.getRangeAxis();
	        numberaxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
	        LineAndShapeRenderer lineandshaperenderer = (LineAndShapeRenderer)categoryplot.getRenderer();
	        lineandshaperenderer.setShapesVisible(true);
	        lineandshaperenderer.setDrawOutlines(true);
	        lineandshaperenderer.setUseFillPaint(true);
	        lineandshaperenderer.setBaseFillPaint(Color.white);
	        lineandshaperenderer.setSeriesStroke(0, new BasicStroke(3F));
	        lineandshaperenderer.setSeriesOutlineStroke(0, new BasicStroke(2.0F));
	        lineandshaperenderer.setSeriesShape(0, new java.awt.geom.Ellipse2D.Double(-5D, -5D, 10D, 10D));
	        return jfreechart;
	    }

	    public static JPanel createDemoPanel()
	    {
	        JFreeChart jfreechart = createChart(createDataset());
	        return new ChartPanel(jfreechart);
	    }
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/**
	 * This method initializes jPanel_rightContent	
	 * 	
	 * @return javax.swing.JPanel	
	 */
	private JPanel getJPanel_rightContent() {
		if (jPanel_rightContent == null) {
			jPanel_rightContent = new JPanel();
			jPanel_rightContent.setLayout(new BoxLayout(getJPanel_rightContent(), BoxLayout.Y_AXIS));
			jPanel_rightContent.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
			jPanel_rightContent.add(getJButton_Upload(), null);
			jPanel_rightContent.add(getJRadioButton_FCFS(), null);
			jPanel_rightContent.add(getJRadioButton_SSTF(), null);
			jPanel_rightContent.add(getJRadioButton_SCAN(), null);
			jPanel_rightContent.add(getJRadioButton_CSCAN(), null);
			jPanel_rightContent.add(getJRadioButton_LOOK(), null);
			jPanel_rightContent.add(getJRadioButton_CLOOK(), null);
		}
		return jPanel_rightContent;
	}
	private JButton getJButton_Upload() {
		if (jButton_Upload == null) {
			jButton_Upload = new JButton();
			
			jButton_Upload.setText("UPLOAD FILE");
		}
		return jButton_Upload;
	}
	private JRadioButton getJRadioButton_FCFS() {
		if (jRadioButton_FCFS == null) {
			jRadioButton_FCFS = new JRadioButton();
			jRadioButton_FCFS.setText("FCFS");
			jRadioButton_FCFS.setSelected(true);
			jRadioButton_FCFS.setSize(new Dimension(150,40));
			jRadioButton_FCFS.setMaximumSize(new Dimension(getJWindow().getWidth()-getJSplitPane_Content().getDividerLocation(),40));
			jRadioButton_FCFS.setMinimumSize(new Dimension(100,40));
		}
		return jRadioButton_FCFS;
	}
	private JRadioButton getJRadioButton_SSTF() {
		if (jRadioButton_SSTF == null) {
			jRadioButton_SSTF = new JRadioButton();
			jRadioButton_SSTF.setText("SSTF");
		}
		return jRadioButton_SSTF;
	}
	private JRadioButton getJRadioButton_SCAN() {
		if (jRadioButton_SCAN == null) {
			jRadioButton_SCAN = new JRadioButton();
			jRadioButton_SCAN.setText("SCAN");
			jRadioButton_SCAN.setSize(new Dimension(150,40));
			jRadioButton_SCAN.setMaximumSize(new Dimension(getJWindow().getWidth()-getJSplitPane_Content().getDividerLocation(),40));
			jRadioButton_SCAN.setMinimumSize(new Dimension(100,40));
			
		}
		return jRadioButton_SCAN;
	}
	private JRadioButton getJRadioButton_CSCAN() {
		if (jRadioButton_CSCAN == null) {
			jRadioButton_CSCAN = new JRadioButton();
			jRadioButton_CSCAN.setText("CSCAN");
			jRadioButton_CSCAN.setSize(new Dimension(150,40));
			jRadioButton_CSCAN.setMaximumSize(new Dimension(getJWindow().getWidth()-getJSplitPane_Content().getDividerLocation(),40));
			jRadioButton_CSCAN.setMinimumSize(new Dimension(100,40));
		}
		return jRadioButton_CSCAN;
	}
	private JRadioButton getJRadioButton_LOOK() {
		if (jRadioButton_LOOK == null) {
			jRadioButton_LOOK = new JRadioButton();
			jRadioButton_LOOK.setText("LOOK");
			jRadioButton_LOOK.setSize(new Dimension(150,40));
			jRadioButton_LOOK.setMaximumSize(new Dimension(getJWindow().getWidth()-getJSplitPane_Content().getDividerLocation(),40));
			jRadioButton_LOOK.setMinimumSize(new Dimension(100,40));
		}
		return jRadioButton_LOOK;
	}
	private JRadioButton getJRadioButton_CLOOK() {
		if (jRadioButton_CLOOK == null) {
			jRadioButton_CLOOK = new JRadioButton();
			jRadioButton_CLOOK.setText("CLOOK");
			jRadioButton_CLOOK.setSize(new Dimension(150,40));
			jRadioButton_CLOOK.setMaximumSize(new Dimension(getJWindow().getWidth()-getJSplitPane_Content().getDividerLocation(),40));
			jRadioButton_CLOOK.setMinimumSize(new Dimension(100,40));
		}
		return jRadioButton_CLOOK;
	}
	/**
	 * This method initializes jSplitPane_right	
	 * 	
	 * @return javax.swing.JSplitPane	
	 */
	private JSplitPane getJSplitPane_right() {
		if (jSplitPane_right == null) {
			jSplitPane_right = new JSplitPane();
			jSplitPane_right.setDividerLocation(300);
			jSplitPane_right.setTopComponent(getJPanel_rightContent());
			jSplitPane_right.setBottomComponent(getJPanel_information());
			jSplitPane_right.setOrientation(JSplitPane.VERTICAL_SPLIT);
		}
		return jSplitPane_right;
	}
	/**
	 * This method initializes jPanel_information	
	 * 	
	 * @return javax.swing.JPanel	
	 */
	private JPanel getJPanel_information() {
		if (jPanel_information == null) {
			jPanel_information = new JPanel();
			jPanel_information.setLayout(new GridBagLayout());
		}
		return jPanel_information;
	}


}
